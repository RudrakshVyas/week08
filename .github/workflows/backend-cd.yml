name: Backend CD - Deploy product & order services to AKS

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'k8s/backend/**'
      - '.github/workflows/backend_cd.yml'

env:
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy_backends:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure login (Service Principal JSON)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # use your compact kubeconfig (Option B)
      - name: Setup kubectl
        uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
          kubectl-version: v1.32.0

      # first time: apply all backend manifests (adjust path if yours differs)
      - name: Apply backend manifests
        run: |
          # if you have a single folder for both services:
          if [ -d k8s/backend ]; then
            kubectl apply -f k8s/backend
          else
            # fallback: try generic k8s folder
            kubectl apply -f k8s
          fi

      # set images to the freshest tags we pushed in CI
      - name: Update images to latest SHA (idempotent)
        run: |
          # product service
          kubectl set image deployment/product-service \
            product-service=${ACR_LOGIN_SERVER}/product_service:${IMAGE_TAG} --record || true
          # order service
          kubectl set image deployment/order-service \
            order-service=${ACR_LOGIN_SERVER}/order_service:${IMAGE_TAG} --record || true

      - name: Wait for rollout
        run: |
          kubectl rollout status deployment/product-service --timeout=120s || true
          kubectl rollout status deployment/order-service --timeout=120s || true

      - name: Show services
        run: kubectl get deploy,po,svc -o wide
